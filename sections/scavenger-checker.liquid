{% liquid 

  assign scavenger_hunt_key = settings.scavenger_hunt_key | downcase | strip | sha256

-%}

<script src="https://cdn.jsdelivr.net/npm/@tsparticles/confetti@3.0.3/tsparticles.confetti.bundle.min.js"></script>

<style>

  .banner__heading {
    margin-top: 0;
    margin-bottom: 3.5rem;
    text-align: center;
  }
  @media screen and (max-width: 749px) {
  .banner__media {
    position: absolute !important;
    }
    .banner__heading {
      margin-bottom: 1.5rem;
    }
  }
  
</style>

<div data-section-id="{{ section.id }}" class="scavenger-guess-container">
  <input type="text" id="guessed-word" placeholder="Whats the secret word?" />
  <button id="check-word" class="button">
    Check Word
  </button>
</div>

<script>
  window.addEventListener('DOMContentLoaded', () => {

    // append this section to banner image section if it exsts (im too lazy to make a new section inside of the existing one)

    const bannerBox = document.querySelector('.banner__box')

    if(bannerBox) {
      const scavengerChecker = document.querySelector('[data-section-id="{{ section.id }}"]')
      bannerBox.appendChild(scavengerChecker)
    }

    const scavengerKey = "{{ scavenger_hunt_key }}"

    document.querySelector('#check-word').addEventListener('click', async () => {
      const guessedWordC = document.querySelector('#guessed-word').value.trim().toLowerCase()
      const guessedWord = await hash(guessedWordC)
      checkWord(guessedWord)
    })
  

      document.querySelector('#guessed-word').addEventListener('keypress', async () => {
        if (event.key !== 'Enter') return
        const guessedWordC = document.querySelector('#guessed-word').value.trim().toLowerCase()
        const guessedWord = await hash(guessedWordC)
        checkWord(guessedWord)
      })

    async function checkWord(guessedWord) {

      if(scavengerKey !== guessedWord) {
        alert('Incorrect word, try again!')
        return
      }

      document.querySelector('.scavenger-guess-container').innerHTML = `
        <div class="loading__spinner">
          <svg
            aria-hidden="true"
            focusable="false"
            class="spinner"
            viewBox="0 0 66 66"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
          </svg>
        </div>
      `

      const res = await fetch(`${Shopify.routes.root}pages/scavenger-hunt?view=scavenger-success`)
      const html = await res.text()        

      const originalBannerHeading = document.querySelector('.banner__heading')

      if(originalBannerHeading) {
        originalBannerHeading.remove()
      }

      document.querySelector('.scavenger-guess-container').innerHTML = html     
      startConfetti()
    }

    async function hash(string) {
        const utf8 = new TextEncoder().encode(string)
        const hashBuffer = await crypto.subtle.digest('SHA-256', utf8)
        const hashArray = Array.from(new Uint8Array(hashBuffer))
        const hashHex = hashArray
          .map((bytes) => bytes.toString(16).padStart(2, '0'))
          .join('')
        return hashHex
    }
  })

  function randomInRange(min, max) {
    return Math.random() * (max - min) + min;
  }

  function startConfetti() {
    const duration = 3000, animationEnd = Date.now() + duration, defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 100 };
    const interval = setInterval(function() {
    const timeLeft = animationEnd - Date.now();

    if (timeLeft <= 0) {
      return clearInterval(interval);
    }

    const particleCount = 50 * (timeLeft / duration);

    // since particles fall down, start a bit higher than random
    confetti(
      Object.assign({}, defaults, {
        particleCount,
        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },
      })
    );
    
    confetti(
      Object.assign({}, defaults, {
          particleCount,
          origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },
        })
      );
    }, 250);

  }

</script>

{% schema %}
{
  "name": "JR Scavenger Hunt Checker",
  "enabled_on": {
    "templates": [
      "page"
    ]
  },
  "settings": [],
  "blocks": [],
  "presets": [
    {
        "name": "JR Scavenger Hunt Checker"
    }
  ]
}
{% endschema %}